"""–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏"""

from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from backend.config import DATABASE_URL
import sqlite3

# –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –ë–î (SQLite)
engine = create_engine(
    DATABASE_URL,
    connect_args={"check_same_thread": False}  # –ù—É–∂–Ω–æ –¥–ª—è SQLite
)

# –§–∞–±—Ä–∏–∫–∞ —Å–µ—Å—Å–∏–π
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–µ–π
Base = declarative_base()

def get_db():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –ë–î"""
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

def auto_migrate_users_table():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É users (SQLite)"""
    db_path = 'volunteer.db'
    columns = [
        ('organization_name', 'TEXT'),
        ('inn', 'TEXT'),
        ('ogrn', 'TEXT'),
        ('org_contact_name', 'TEXT'),
        ('org_phone', 'TEXT'),
        ('org_email', 'TEXT'),
        ('org_address', 'TEXT'),
    ]
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        cursor.execute("PRAGMA table_info(users);")
        existing = set(row[1] for row in cursor.fetchall())
        for col, col_type in columns:
            if col not in existing:
                print(f"[MIGRATION] –î–æ–±–∞–≤–ª—è—é –ø–æ–ª–µ {col} –≤ users...")
                cursor.execute(f"ALTER TABLE users ADD COLUMN {col} {col_type};")
        conn.commit()
        conn.close()
    except Exception as e:
        print(f"[MIGRATION ERROR] {e}")

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)"""
    print("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    print("üì¶ –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π...")
    from backend.models.user import User
    print("  ‚úÖ User model imported")
    from backend.models.volunteer_profile import VolunteerProfile
    print("  ‚úÖ VolunteerProfile model imported")
    from backend.models.event import Event
    print("  ‚úÖ Event model imported")
    from backend.models.registration import Registration
    print("  ‚úÖ Registration model imported")
    print("üî® –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
    Base.metadata.create_all(engine)
    auto_migrate_users_table()