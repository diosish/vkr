"""
–ü–æ–ª–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –æ—Ç–¥–∞—á–µ–π React —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
"""

from fastapi import FastAPI, Depends, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse
from fastapi.staticfiles import StaticFiles
from contextlib import asynccontextmanager
from sqlalchemy.orm import Session
from datetime import datetime
from pathlib import Path

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º backend
from backend.database import init_db, get_db
from backend.config import ALLOWED_ORIGINS, WEBAPP_URL, TELEGRAM_BOT_TOKEN
from backend.models.user import User, UserRole
from backend.models.volunteer_profile import VolunteerProfile
from backend.models.event import Event, EventStatus, EventCategory
from backend.models.registration import Registration, RegistrationStatus

# –ü—É—Ç—å –∫ —Å–æ–±—Ä–∞–Ω–Ω–æ–º—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
FRONTEND_BUILD = Path("frontend/build")

# Lifecycle —Å–æ–±—ã—Ç–∏–µ
@asynccontextmanager
async def lifespan(app: FastAPI):
    # Startup
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
    print(f"üåê Webapp URL: {WEBAPP_URL}")
    print(f"üìÅ Frontend: {'‚úÖ –ù–∞–π–¥–µ–Ω' if FRONTEND_BUILD.exists() else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
    init_db()
    create_test_data()
    yield
    # Shutdown
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")

def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

    db = next(get_db())

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        existing_user = db.query(User).first()
        if existing_user:
            print("  ‚ÑπÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
            db.close()
            return

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        admin_user = User(
            telegram_user_id=123456789,
            telegram_username="admin_test",
            first_name="–ê–¥–º–∏–Ω",
            last_name="–¢–µ—Å—Ç–æ–≤—ã–π",
            email="admin@test.com",
            phone="+7 (999) 111-11-11",
            role=UserRole.ADMIN
        )

        organizer_user = User(
            telegram_user_id=987654321,
            telegram_username="organizer_test",
            first_name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä",
            last_name="–¢–µ—Å—Ç–æ–≤—ã–π",
            email="organizer@test.com",
            phone="+7 (999) 222-22-22",
            role=UserRole.ORGANIZER
        )

        volunteer_user = User(
            telegram_user_id=111222333,
            telegram_username="volunteer_test",
            first_name="–í–æ–ª–æ–Ω—Ç–µ—Ä",
            last_name="–¢–µ—Å—Ç–æ–≤—ã–π",
            email="volunteer@test.com",
            phone="+7 (999) 333-33-33",
            role=UserRole.VOLUNTEER
        )

        db.add_all([admin_user, organizer_user, volunteer_user])
        db.commit()
        db.refresh(organizer_user)
        db.refresh(volunteer_user)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        events_data = [
            {
                "creator_id": organizer_user.id,
                "title": "–£–±–æ—Ä–∫–∞ –ø–∞—Ä–∫–∞",
                "description": "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–∫—Ü–∏—è –ø–æ —É–±–æ—Ä–∫–µ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –ø–∞—Ä–∫–∞. –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤—Å–µ—Ö –Ω–µ—Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —É–ª—É—á—à–µ–Ω–∏–∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞.",
                "short_description": "–ü–æ–º–æ–≥–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à –≥–æ—Ä–æ–¥ —á–∏—â–µ!",
                "category": EventCategory.ENVIRONMENTAL,
                "tags": ["—ç–∫–æ–ª–æ–≥–∏—è", "—É–±–æ—Ä–∫–∞", "–ø–∞—Ä–∫", "–ø—Ä–∏—Ä–æ–¥–∞"],
                "location": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∫",
                "address": "—É–ª. –ü–∞—Ä–∫–æ–≤–∞—è, 1",
                "start_date": datetime(2024, 12, 15, 10, 0),
                "end_date": datetime(2024, 12, 15, 16, 0),
                "max_volunteers": 20,
                "required_skills": ["–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å"],
                "what_to_bring": "–ü–µ—Ä—á–∞—Ç–∫–∏, —É–¥–æ–±–Ω–∞—è –æ–¥–µ–∂–¥–∞, –ø–∏—Ç—å–µ–≤–∞—è –≤–æ–¥–∞",
                "meal_provided": True,
                "contact_person": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                "contact_phone": "+7 (999) 222-22-22",
                "status": EventStatus.PUBLISHED,
                "published_at": datetime.utcnow()
            },
            {
                "creator_id": organizer_user.id,
                "title": "–ü–æ–º–æ—â—å –≤ –¥–µ—Ç—Å–∫–æ–º –¥–æ–º–µ",
                "description": "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤ –∏ –∏–≥—Ä –¥–ª—è –¥–µ—Ç–µ–π –≤ –¥–µ—Ç—Å–∫–æ–º –¥–æ–º–µ. –ü–æ–¥–∞—Ä–∏—Ç–µ –¥–µ—Ç—è–º —Ä–∞–¥–æ—Å—Ç—å —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –æ–±—â–µ–Ω–∏—è!",
                "short_description": "–ü–æ–¥–∞—Ä–∏—Ç–µ –¥–µ—Ç—è–º —Ä–∞–¥–æ—Å—Ç—å —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞!",
                "category": EventCategory.SOCIAL,
                "tags": ["–¥–µ—Ç–∏", "—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ", "–ø–æ–º–æ—â—å"],
                "location": "–î–µ—Ç—Å–∫–∏–π –¥–æ–º ‚Ññ5",
                "address": "—É–ª. –î–µ—Ç—Å–∫–∞—è, 10",
                "start_date": datetime(2024, 12, 20, 14, 0),
                "end_date": datetime(2024, 12, 20, 18, 0),
                "max_volunteers": 10,
                "required_skills": ["–†–∞–±–æ—Ç–∞ —Å –¥–µ—Ç—å–º–∏", "–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏"],
                "what_to_bring": "–•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
                "meal_provided": False,
                "contact_person": "–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞",
                "contact_phone": "+7 (999) 333-33-33",
                "status": EventStatus.PUBLISHED,
                "published_at": datetime.utcnow()
            },
            {
                "creator_id": organizer_user.id,
                "title": "–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–±–µ–≥",
                "description": "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è —Å–±–æ—Ä–∞ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å. –£—á–∞—Å—Ç–≤—É–π—Ç–µ —Å–∞–º–∏ –∏–ª–∏ –ø–æ–º–æ–≥–∞–π—Ç–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏!",
                "short_description": "–ë–µ–≥–∏—Ç–µ –∑–∞ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ!",
                "category": EventCategory.SPORTS,
                "tags": ["—Å–ø–æ—Ä—Ç", "–±–µ–≥", "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"],
                "location": "–°—Ç–∞–¥–∏–æ–Ω –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π",
                "address": "–ø—Ä. –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π, 25",
                "start_date": datetime(2024, 12, 25, 9, 0),
                "end_date": datetime(2024, 12, 25, 15, 0),
                "max_volunteers": 15,
                "required_skills": [],
                "what_to_bring": "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞",
                "meal_provided": True,
                "contact_person": "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤",
                "contact_phone": "+7 (999) 444-44-44",
                "status": EventStatus.PUBLISHED,
                "published_at": datetime.utcnow()
            }
        ]

        for event_data in events_data:
            event = Event(**event_data)
            db.add(event)

        db.commit()

        print("  ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:")
        print(f"    üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: 3")
        print(f"    üìÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {len(events_data)}")

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.rollback()
    finally:
        db.close()

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="Volunteer Registration System",
    description="–ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤ –¥–ª—è Telegram",
    version="2.0.0",
    lifespan=lifespan
)

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=ALLOWED_ORIGINS,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
if FRONTEND_BUILD.exists():
    app.mount("/static", StaticFiles(directory=FRONTEND_BUILD / "static"), name="static")

# API Routes
@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"""
    return {
        "status": "healthy",
        "service": "volunteer-registration-system",
        "version": "2.0.0",
        "webapp_url": WEBAPP_URL,
        "bot_configured": bool(TELEGRAM_BOT_TOKEN),
        "frontend": FRONTEND_BUILD.exists()
    }

# –û—Ç–¥–∞—á–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
if FRONTEND_BUILD.exists():
    @app.get("/{full_path:path}")
    async def serve_frontend(full_path: str):
        """–û—Ç–¥–∞—á–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        # –ò—Å–∫–ª—é—á–∞–µ–º API –º–∞—Ä—à—Ä—É—Ç—ã –∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        if (full_path.startswith("api/") or
            full_path.startswith("docs") or
            full_path.startswith("health") or
            full_path.startswith("static/") or
            full_path.startswith("test/")):
            raise HTTPException(status_code=404, detail="Not found")

        index_file = FRONTEND_BUILD / "index.html"
        if index_file.exists():
            return HTMLResponse(content=index_file.read_text(encoding='utf-8'))

        raise HTTPException(status_code=404, detail="Frontend not found")
else:
    # –ï—Å–ª–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ —Å–æ–±—Ä–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    @app.get("/")
    async def root():
        return HTMLResponse(content=f"""
        <!DOCTYPE html>
        <html>
        <head>
            <title>Volunteer System - Development</title>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
                body {{ font-family: system-ui; padding: 20px; line-height: 1.6; }}
                .container {{ max-width: 600px; margin: 0 auto; }}
                .status {{ padding: 15px; border-radius: 8px; margin: 15px 0; }}
                .success {{ background: #d4edda; color: #155724; }}
                .warning {{ background: #fff3cd; color: #856404; }}
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üöÄ Volunteer Registration System</h1>
                
                <div class="status success">
                    <strong>Backend:</strong> ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000
                </div>
                
                <div class="status warning">
                    <strong>Frontend:</strong> ‚ö†Ô∏è –ù–µ —Å–æ–±—Ä–∞–Ω
                </div>
                
                <h2>–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:</h2>
                <ol>
                    <li>–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: <code>cd frontend && npm start</code></li>
                    <li>–û—Ç–∫—Ä–æ–π—Ç–µ: <a href="http://localhost:3000">http://localhost:3000</a></li>
                </ol>
                
                <h2>–î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:</h2>
                <ol>
                    <li>–°–æ–±–µ—Ä–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: <code>cd frontend && npm run build</code></li>
                    <li>–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä</li>
                </ol>
                
                <h2>API:</h2>
                <ul>
                    <li><a href="/docs">üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a></li>
                    <li><a href="/health">üîç –ó–¥–æ—Ä–æ–≤—å–µ</a></li>
                    <li><a href="/api/events">üìÖ –°–æ–±—ã—Ç–∏—è</a></li>
                </ul>
                
                <p><strong>WebApp URL:</strong> {WEBAPP_URL}</p>
            </div>
        </body>
        </html>
        """)