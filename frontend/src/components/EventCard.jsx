import React from 'react';
import { Calendar, MapPin, Users, Clock } from 'lucide-react';
import { Card, Button } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';
import { formatDate, formatDateShort } from '../services/api';

const EventCard = ({ event, onClick, compact = false, showCategory = false, user }) => {
  const navigate = useNavigate();

  const getCategoryIcon = (category) => {
    const icons = {
      environmental: 'üå±',
      social: 'ü§ù',
      education: 'üìö',
      health: 'üè•',
      community: 'üèòÔ∏è',
      culture: 'üé≠',
      sports: '‚öΩ',
      emergency: 'üö®',
      other: 'üìã'
    };
    return icons[category] || icons.other;
  };

  const getCategoryLabel = (category) => {
    const labels = {
      environmental: '–≠–∫–æ–ª–æ–≥–∏—è',
      social: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ',
      education: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      health: '–ó–¥–æ—Ä–æ–≤—å–µ',
      community: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ',
      culture: '–ö—É–ª—å—Ç—É—Ä–∞',
      sports: '–°–ø–æ—Ä—Ç',
      emergency: '–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ',
      other: '–î—Ä—É–≥–æ–µ'
    };
    return labels[category] || labels.other;
  };

  const getStatusBadge = () => {
    if (event.user_registration_status) {
      const statusMap = {
        pending: { text: '–û–∂–∏–¥–∞–Ω–∏–µ', class: 'badge-pending' },
        confirmed: { text: '–ó–∞–ø–∏—Å–∞–Ω', class: 'badge-confirmed' },
        cancelled: { text: '–û—Ç–º–µ–Ω–µ–Ω–æ', class: 'badge-cancelled' }
      };
      const status = statusMap[event.user_registration_status];
      return status ? <span className={`badge ${status.class}`}>{status.text}</span> : null;
    }
    return null;
  };

  const handleClick = () => {
    if (onClick) {
      onClick();
    } else {
      navigate(`/events/${event.id}`);
    }
  };

  return (
    <Card className="mb-3" style={{ cursor: 'pointer' }} onClick={handleClick}>
      <Card.Header className="d-flex justify-content-between align-items-center">
        <h5 className="mb-0">{event.title}</h5>
        <span className={`badge bg-${getStatusColor(event.status)}`}>
          {getStatusText(event.status)}
        </span>
      </Card.Header>
      <Card.Body>
        <Card.Text>
          <strong>–ú–µ—Å—Ç–æ:</strong> {event.location}<br/>
          <strong>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</strong> {formatDate(event.start_date)}<br/>
          <strong>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</strong> {formatDate(event.end_date)}<br/>
          <strong>–í–æ–ª–æ–Ω—Ç–µ—Ä—ã:</strong> {event.current_volunteers_count}/{event.max_volunteers}
        </Card.Text>
        {event.short_description && (
          <Card.Text className="text-muted">
            {event.short_description}
          </Card.Text>
        )}
      </Card.Body>
    </Card>
  );
};

const getStatusColor = (status) => {
  switch (status) {
    case 'draft':
      return 'secondary';
    case 'published':
      return 'success';
    case 'cancelled':
      return 'danger';
    case 'completed':
      return 'info';
    default:
      return 'secondary';
  }
};

const getStatusText = (status) => {
  switch (status) {
    case 'draft':
      return '–ß–µ—Ä–Ω–æ–≤–∏–∫';
    case 'published':
      return '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ';
    case 'cancelled':
      return '–û—Ç–º–µ–Ω–µ–Ω–æ';
    case 'completed':
      return '–ó–∞–≤–µ—Ä—à–µ–Ω–æ';
    default:
      return status;
  }
};

export default EventCard;