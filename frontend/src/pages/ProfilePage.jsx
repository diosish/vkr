// frontend/src/pages/ProfilePage.jsx
import React, { useState, useEffect } from 'react';
import { User, Edit, Save, X, Phone, Mail, MapPin, Calendar, Award, Heart } from 'lucide-react';
import { updateProfile } from '../services/api';
import LoadingSpinner from '../components/LoadingSpinner';
import useTelegram from '../hooks/useTelegram';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';

const ProfilePage = () => {
  const { user, setUser, deleteProfile } = useAuth();
  const [editMode, setEditMode] = useState(false);
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [errors, setErrors] = useState({});
  const { showAlert } = useTelegram();
  const navigate = useNavigate();

  const [formData, setFormData] = useState({
    // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    email: '',
    phone: '',
    bio: '',
    location: '',

    // –ü—Ä–æ—Ñ–∏–ª—å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞
    middle_name: '',
    birth_date: '',
    gender: '',

    // –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
    emergency_contact_name: '',
    emergency_contact_phone: '',
    emergency_contact_relation: '',

    // –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    education: '',
    occupation: '',
    organization: '',

    // –ù–∞–≤—ã–∫–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã
    skills: [],
    interests: [],
    languages: ['ru'],
    experience_description: '',

    // –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    travel_willingness: false,
    max_travel_distance: 50,
    preferred_activities: []
  });

  const skillsOptions = [
    '–†–∞–±–æ—Ç–∞ —Å –¥–µ—Ç—å–º–∏', '–†–∞–±–æ—Ç–∞ —Å –ø–æ–∂–∏–ª—ã–º–∏', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏', '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞', '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–ü–µ—Ä–µ–≤–æ–¥—ã',
    '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–í–∏–¥–µ–æ—Å—ä–µ–º–∫–∞', '–î–∏–∑–∞–π–Ω', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ö—É–ª–∏–Ω–∞—Ä–∏—è', '–í–æ–∂–¥–µ–Ω–∏–µ',
    '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏', '–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏', '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏'
  ];

  const interestsOptions = [
    '–≠–∫–æ–ª–æ–≥–∏—è', '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ', '–ö—É–ª—å—Ç—É—Ä–∞',
    '–°–ø–æ—Ä—Ç', '–ñ–∏–≤–æ—Ç–Ω—ã–µ', '–ü–æ–∂–∏–ª—ã–µ –ª—é–¥–∏', '–î–µ—Ç–∏', '–õ—é–¥–∏ —Å –û–í–ó', '–ë–µ–∑–¥–æ–º–Ω—ã–µ',
    '–ë–µ–∂–µ–Ω—Ü—ã', '–ü—Ä–∏—Ä–æ–¥–∞', '–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ù–∞—É–∫–∞'
  ];

  const preferredActivitiesOptions = [
    '–†–∞–∑–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', '–†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø–æ–º–æ—â—å', '–í—ã–µ–∑–¥–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', '–û—Ñ–∏—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
    '–§–∏–∑–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞', '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞', '–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
    '–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏', '–ü—É–±–ª–∏—á–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è', '–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
  ];

  useEffect(() => {
    if (user) {
      setFormData({
        email: user.email || '',
        phone: user.phone || '',
        bio: user.bio || '',
        location: user.location || '',
        middle_name: user.middle_name || '',
        birth_date: user.birth_date || '',
        gender: user.gender || '',
        emergency_contact_name: user.emergency_contact_name || '',
        emergency_contact_phone: user.emergency_contact_phone || '',
        emergency_contact_relation: user.emergency_contact_relation || '',
        education: user.education || '',
        occupation: user.occupation || '',
        organization: user.organization || '',
        skills: user.skills || [],
        interests: user.interests || [],
        languages: user.languages || ['ru'],
        experience_description: user.experience_description || '',
        travel_willingness: user.travel_willingness || false,
        max_travel_distance: user.max_travel_distance || 50,
        preferred_activities: user.preferred_activities || []
      });
    }
  }, [user]);

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));

    // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏
    if (errors[name]) {
      setErrors(prev => ({ ...prev, [name]: null }));
    }
  };

  const handleMultiSelect = (name, value) => {
    setFormData(prev => ({
      ...prev,
      [name]: prev[name].includes(value)
        ? prev[name].filter(item => item !== value)
        : [...prev[name], value]
    }));
  };

  const handleSave = async () => {
    setSaving(true);
    setErrors({});

    try {
      const updatedUser = await updateProfile(formData);
      setUser(updatedUser);
      setEditMode(false);
      showAlert('–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω! ‚úÖ');
    } catch (error) {
      showAlert('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ' + error.message);
      setErrors({ general: error.message });
    } finally {
      setSaving(false);
    }
  };

  const handleCancel = () => {
    setEditMode(false);
    setErrors({});
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–ø—Å–∞ user
    if (user) {
      setFormData({
        email: user.email || '',
        phone: user.phone || '',
        bio: user.bio || '',
        location: user.location || '',
        middle_name: user.middle_name || '',
        birth_date: user.birth_date || '',
        gender: user.gender || '',
        emergency_contact_name: user.emergency_contact_name || '',
        emergency_contact_phone: user.emergency_contact_phone || '',
        emergency_contact_relation: user.emergency_contact_relation || '',
        education: user.education || '',
        occupation: user.occupation || '',
        organization: user.organization || '',
        skills: user.skills || [],
        interests: user.interests || [],
        languages: user.languages || ['ru'],
        experience_description: user.experience_description || '',
        travel_willingness: user.travel_willingness || false,
        max_travel_distance: user.max_travel_distance || 50,
        preferred_activities: user.preferred_activities || []
      });
    }
  };

  const getCompletionPercentage = () => {
    const fields = [
      formData.email, formData.phone, formData.birth_date,
      formData.emergency_contact_name, formData.emergency_contact_phone,
      formData.education, formData.skills.length > 0, formData.experience_description
    ];
    const filledFields = fields.filter(field => field).length;
    return Math.round((filledFields / fields.length) * 100);
  };

  const handleDeleteProfile = async () => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!')) return;
    try {
      await deleteProfile();
      navigate('/');
    } catch (e) {
      showAlert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ' + e.message);
    }
  };

  // --- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è organizer ---
  if (user?.role === 'organizer') {
    return (
      <div className="profile-page">
        <div className="profile-header card mb-4">
          <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
            <div className="avatar" style={{ width: '80px', height: '80px', borderRadius: '50%', backgroundColor: 'var(--tg-button-color)', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '32px', color: 'white' }}>
              {user?.avatar_url ? (
                <img src={user.avatar_url} alt="Avatar" style={{ width: '100%', height: '100%', borderRadius: '50%' }} />
              ) : (
                <User size={40} />
              )}
            </div>
            <div>
              <h2 className="mb-1">{user?.first_name} {user?.last_name}</h2>
              <p className="text-muted mb-1">@{user?.telegram_username || 'organizer'}</p>
              <p className="text-muted font-small">üëî –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä</p>
            </div>
          </div>
        </div>
        <div className="card mb-4">
          <h3 className="mb-3">üè¢ –î–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</h3>
          <div className="form-group"><b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {user.organization_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
          <div className="form-group"><b>–ò–ù–ù:</b> {user.inn || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>–û–ì–†–ù:</b> {user.ogrn || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:</b> {user.org_contact_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
          <div className="form-group"><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {user.org_phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>Email:</b> {user.org_email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>–Æ—Ä. –∞–¥—Ä–µ—Å:</b> {user.org_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
        </div>
        <button className="btn btn-danger" onClick={handleDeleteProfile} style={{ marginTop: 16 }}>–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</button>
      </div>
    );
  }

  // --- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è admin ---
  if (user?.role === 'admin') {
    return (
      <div className="profile-page">
        <div className="profile-header card mb-4">
          <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
            <div className="avatar" style={{ width: '80px', height: '80px', borderRadius: '50%', backgroundColor: 'var(--tg-button-color)', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '32px', color: 'white' }}>
              {user?.avatar_url ? (
                <img src={user.avatar_url} alt="Avatar" style={{ width: '100%', height: '100%', borderRadius: '50%' }} />
              ) : (
                <User size={40} />
              )}
            </div>
            <div>
              <h2 className="mb-1">{user?.first_name} {user?.last_name}</h2>
              <p className="text-muted mb-1">@{user?.telegram_username || 'admin'}</p>
              <p className="text-muted font-small">üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</p>
            </div>
          </div>
        </div>
        <button className="btn btn-danger" onClick={handleDeleteProfile} style={{ marginTop: 16 }}>–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</button>
      </div>
    );
  }

  // --- –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è volunteer ---
  return (
    <div className="profile-page">
      {loading ? (
        <LoadingSpinner />
      ) : (
        <>
          <div className="profile-header card mb-4">
            <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
              <div className="avatar" style={{ width: '80px', height: '80px', borderRadius: '50%', backgroundColor: 'var(--tg-button-color)', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '32px', color: 'white' }}>
                {user?.avatar_url ? (
                  <img src={user.avatar_url} alt="Avatar" style={{ width: '100%', height: '100%', borderRadius: '50%' }} />
                ) : (
                  <User size={40} />
                )}
              </div>
              <div>
                <h2 className="mb-1">{user?.first_name} {user?.last_name}</h2>
                <p className="text-muted mb-1">@{user?.telegram_username || 'volunteer'}</p>
                <p className="text-muted font-small">ü§ù –í–æ–ª–æ–Ω—Ç–µ—Ä</p>
              </div>
            </div>
          </div>

          {editMode ? (
            <div className="card">
              <div className="card-header d-flex justify-content-between align-items-center">
                <h3>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</h3>
                <div>
                  <button className="btn btn-secondary me-2" onClick={handleCancel} disabled={saving}>
                    <X size={16} className="me-1" /> –û—Ç–º–µ–Ω–∞
                  </button>
                  <button className="btn btn-primary" onClick={handleSave} disabled={saving}>
                    {saving ? <LoadingSpinner size="sm" /> : <><Save size={16} className="me-1" /> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</>}
                  </button>
                </div>
              </div>
              <div className="card-body">
                {/* –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
                <div className="row">
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>Email</label>
                      <input
                        type="email"
                        className="form-control"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                      <input
                        type="tel"
                        className="form-control"
                        name="phone"
                        value={formData.phone}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                </div>

                <div className="form-group mb-3">
                  <label>–û —Å–µ–±–µ</label>
                  <textarea
                    className="form-control"
                    name="bio"
                    value={formData.bio}
                    onChange={handleChange}
                    rows={3}
                  />
                </div>

                <div className="form-group mb-3">
                  <label>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
                  <input
                    type="text"
                    className="form-control"
                    name="location"
                    value={formData.location}
                    onChange={handleChange}
                  />
                </div>

                <h4 className="mt-4 mb-3">–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h4>
                <div className="row">
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞</label>
                      <input
                        type="text"
                        className="form-control"
                        name="emergency_contact_name"
                        value={formData.emergency_contact_name}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                      <input
                        type="tel"
                        className="form-control"
                        name="emergency_contact_phone"
                        value={formData.emergency_contact_phone}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–û—Ç–Ω–æ—à–µ–Ω–∏–µ</label>
                      <input
                        type="text"
                        className="form-control"
                        name="emergency_contact_relation"
                        value={formData.emergency_contact_relation}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                </div>

                <h4 className="mt-4 mb-3">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h4>
                <div className="row">
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</label>
                      <input
                        type="text"
                        className="form-control"
                        name="education"
                        value={formData.education}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è</label>
                      <input
                        type="text"
                        className="form-control"
                        name="occupation"
                        value={formData.occupation}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è</label>
                      <input
                        type="text"
                        className="form-control"
                        name="organization"
                        value={formData.organization}
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                </div>

                <div className="form-group mb-3">
                  <label>–û–ø—ã—Ç –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–∞</label>
                  <textarea
                    className="form-control"
                    name="experience_description"
                    value={formData.experience_description}
                    onChange={handleChange}
                    rows={3}
                  />
                </div>

                <h4 className="mt-4 mb-3">–ù–∞–≤—ã–∫–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã</h4>
                <div className="row">
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ù–∞–≤—ã–∫–∏</label>
                      <div className="skills-grid">
                        {skillsOptions.map(skill => (
                          <div
                            key={skill}
                            className={`skill-item ${formData.skills.includes(skill) ? 'active' : ''}`}
                            onClick={() => handleMultiSelect('skills', skill)}
                          >
                            {skill}
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ò–Ω—Ç–µ—Ä–µ—Å—ã</label>
                      <div className="interests-grid">
                        {interestsOptions.map(interest => (
                          <div
                            key={interest}
                            className={`interest-item ${formData.interests.includes(interest) ? 'active' : ''}`}
                            onClick={() => handleMultiSelect('interests', interest)}
                          >
                            {interest}
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>

                <h4 className="mt-4 mb-3">–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</h4>
                <div className="row">
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–æ–µ–∑–¥–∫–∞–º</label>
                      <div className="form-check">
                        <input
                          type="checkbox"
                          className="form-check-input"
                          name="travel_willingness"
                          checked={formData.travel_willingness}
                          onChange={handleChange}
                        />
                        <label className="form-check-label">–ì–æ—Ç–æ–≤ –∫ –ø–æ–µ–∑–¥–∫–∞–º</label>
                      </div>
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–∫–º)</label>
                      <input
                        type="number"
                        className="form-control"
                        name="max_travel_distance"
                        value={formData.max_travel_distance}
                        onChange={handleChange}
                        min="0"
                        max="1000"
                      />
                    </div>
                  </div>
                </div>

                <div className="form-group mb-3">
                  <label>–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –≤–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</label>
                  <div className="activities-grid">
                    {preferredActivitiesOptions.map(activity => (
                      <div
                        key={activity}
                        className={`activity-item ${formData.preferred_activities.includes(activity) ? 'active' : ''}`}
                        onClick={() => handleMultiSelect('preferred_activities', activity)}
                      >
                        {activity}
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          ) : (
            <div className="card">
              <div className="card-header d-flex justify-content-between align-items-center">
                <h3>–ü—Ä–æ—Ñ–∏–ª—å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞</h3>
                <button className="btn btn-primary" onClick={() => setEditMode(true)}>
                  <Edit size={16} className="me-1" /> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
              </div>
              <div className="card-body">
                <div className="row">
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label><Mail size={16} className="me-1" /> Email</label>
                      <p>{user?.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label><Phone size={16} className="me-1" /> –¢–µ–ª–µ—Ñ–æ–Ω</label>
                      <p>{user?.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                    </div>
                  </div>
                </div>

                <div className="form-group mb-3">
                  <label><User size={16} className="me-1" /> –û —Å–µ–±–µ</label>
                  <p>{user?.bio || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                </div>

                <div className="form-group mb-3">
                  <label><MapPin size={16} className="me-1" /> –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
                  <p>{user?.location || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                </div>

                <h4 className="mt-4 mb-3">–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h4>
                <div className="row">
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞</label>
                      <p>{user?.emergency_contact_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                      <p>{user?.emergency_contact_phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–û—Ç–Ω–æ—à–µ–Ω–∏–µ</label>
                      <p>{user?.emergency_contact_relation || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                    </div>
                  </div>
                </div>

                <h4 className="mt-4 mb-3">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h4>
                <div className="row">
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</label>
                      <p>{user?.education || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è</label>
                      <p>{user?.occupation || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
                    </div>
                  </div>
                  <div className="col-md-4">
                    <div className="form-group mb-3">
                      <label>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è</label>
                      <p>{user?.organization || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
                    </div>
                  </div>
                </div>

                <div className="form-group mb-3">
                  <label>–û–ø—ã—Ç –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–∞</label>
                  <p>{user?.experience_description || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                </div>

                <h4 className="mt-4 mb-3">–ù–∞–≤—ã–∫–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã</h4>
                <div className="row">
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ù–∞–≤—ã–∫–∏</label>
                      <div className="skills-list">
                        {user?.skills?.length > 0 ? (
                          user.skills.map(skill => (
                            <span key={skill} className="badge bg-primary me-1 mb-1">{skill}</span>
                          ))
                        ) : (
                          <p className="text-muted">–ù–∞–≤—ã–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã</p>
                        )}
                      </div>
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ò–Ω—Ç–µ—Ä–µ—Å—ã</label>
                      <div className="interests-list">
                        {user?.interests?.length > 0 ? (
                          user.interests.map(interest => (
                            <span key={interest} className="badge bg-info me-1 mb-1">{interest}</span>
                          ))
                        ) : (
                          <p className="text-muted">–ò–Ω—Ç–µ—Ä–µ—Å—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã</p>
                        )}
                      </div>
                    </div>
                  </div>
                </div>

                <h4 className="mt-4 mb-3">–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</h4>
                <div className="row">
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–æ–µ–∑–¥–∫–∞–º</label>
                      <p>{user?.travel_willingness ? '–î–∞' : '–ù–µ—Ç'}</p>
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="form-group mb-3">
                      <label>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ</label>
                      <p>{user?.max_travel_distance ? `${user.max_travel_distance} –∫–º` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                    </div>
                  </div>
                </div>

                <div className="form-group mb-3">
                  <label>–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –≤–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</label>
                  <div className="activities-list">
                    {user?.preferred_activities?.length > 0 ? (
                      user.preferred_activities.map(activity => (
                        <span key={activity} className="badge bg-secondary me-1 mb-1">{activity}</span>
                      ))
                    ) : (
                      <p className="text-muted">–í–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã</p>
                    )}
                  </div>
                </div>
              </div>
            </div>
          )}

          <button className="btn btn-danger" onClick={handleDeleteProfile} style={{ marginTop: 16 }}>–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</button>
        </>
      )}
    </div>
  );
};

export default ProfilePage;