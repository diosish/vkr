// frontend/src/pages/ProfilePage.jsx
import React, { useState, useEffect } from 'react';
import { User, Edit, Save, X, Phone, Mail, MapPin, Calendar, Award, Heart } from 'lucide-react';
import { updateProfile, getCurrentUser } from '../services/api';
import { saveAuthData, getAuthData, clearAuthData } from '../services/auth';
import LoadingSpinner from '../components/LoadingSpinner';
import useTelegram from '../hooks/useTelegram';
import { useNavigate } from 'react-router-dom';

const ProfilePage = ({ user, setUser }) => {
  const [editMode, setEditMode] = useState(false);
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [errors, setErrors] = useState({});
  const { showAlert } = useTelegram();
  const navigate = useNavigate();

  const [formData, setFormData] = useState({
    // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    email: '',
    phone: '',
    bio: '',
    location: '',

    // –ü—Ä–æ—Ñ–∏–ª—å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞
    middle_name: '',
    birth_date: '',
    gender: '',

    // –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
    emergency_contact_name: '',
    emergency_contact_phone: '',
    emergency_contact_relation: '',

    // –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    education: '',
    occupation: '',
    organization: '',

    // –ù–∞–≤—ã–∫–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã
    skills: [],
    interests: [],
    languages: ['ru'],
    experience_description: '',

    // –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    travel_willingness: false,
    max_travel_distance: 50,
    preferred_activities: []
  });

  const skillsOptions = [
    '–†–∞–±–æ—Ç–∞ —Å –¥–µ—Ç—å–º–∏', '–†–∞–±–æ—Ç–∞ —Å –ø–æ–∂–∏–ª—ã–º–∏', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏', '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞', '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–ü–µ—Ä–µ–≤–æ–¥—ã',
    '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–í–∏–¥–µ–æ—Å—ä–µ–º–∫–∞', '–î–∏–∑–∞–π–Ω', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ö—É–ª–∏–Ω–∞—Ä–∏—è', '–í–æ–∂–¥–µ–Ω–∏–µ',
    '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏', '–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏', '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏'
  ];

  const interestsOptions = [
    '–≠–∫–æ–ª–æ–≥–∏—è', '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ', '–ö—É–ª—å—Ç—É—Ä–∞',
    '–°–ø–æ—Ä—Ç', '–ñ–∏–≤–æ—Ç–Ω—ã–µ', '–ü–æ–∂–∏–ª—ã–µ –ª—é–¥–∏', '–î–µ—Ç–∏', '–õ—é–¥–∏ —Å –û–í–ó', '–ë–µ–∑–¥–æ–º–Ω—ã–µ',
    '–ë–µ–∂–µ–Ω—Ü—ã', '–ü—Ä–∏—Ä–æ–¥–∞', '–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ù–∞—É–∫–∞'
  ];

  const preferredActivitiesOptions = [
    '–†–∞–∑–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', '–†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø–æ–º–æ—â—å', '–í—ã–µ–∑–¥–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', '–û—Ñ–∏—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
    '–§–∏–∑–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞', '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞', '–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
    '–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏', '–ü—É–±–ª–∏—á–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è', '–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
  ];

  useEffect(() => {
    if (user) {
      setFormData({
        email: user.email || '',
        phone: user.phone || '',
        bio: user.bio || '',
        location: user.location || '',
        middle_name: user.middle_name || '',
        birth_date: user.birth_date || '',
        gender: user.gender || '',
        emergency_contact_name: user.emergency_contact_name || '',
        emergency_contact_phone: user.emergency_contact_phone || '',
        emergency_contact_relation: user.emergency_contact_relation || '',
        education: user.education || '',
        occupation: user.occupation || '',
        organization: user.organization || '',
        skills: user.skills || [],
        interests: user.interests || [],
        languages: user.languages || ['ru'],
        experience_description: user.experience_description || '',
        travel_willingness: user.travel_willingness || false,
        max_travel_distance: user.max_travel_distance || 50,
        preferred_activities: user.preferred_activities || []
      });
    }
  }, [user]);

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));

    // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏
    if (errors[name]) {
      setErrors(prev => ({ ...prev, [name]: null }));
    }
  };

  const handleMultiSelect = (name, value) => {
    setFormData(prev => ({
      ...prev,
      [name]: prev[name].includes(value)
        ? prev[name].filter(item => item !== value)
        : [...prev[name], value]
    }));
  };

  const handleSave = async () => {
    setSaving(true);
    setErrors({});

    try {
      const updatedUser = await updateProfile(formData);
      setUser(updatedUser);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      const prevAuth = getAuthData();
      if (prevAuth) saveAuthData({ ...prevAuth, user: updatedUser });
      setEditMode(false);
      showAlert('–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω! ‚úÖ');
    } catch (error) {
      showAlert('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ' + error.message);
      setErrors({ general: error.message });
    } finally {
      setSaving(false);
    }
  };

  const handleCancel = () => {
    setEditMode(false);
    setErrors({});
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–ø—Å–∞ user
    if (user) {
      setFormData({
        email: user.email || '',
        phone: user.phone || '',
        bio: user.bio || '',
        location: user.location || '',
        middle_name: user.middle_name || '',
        birth_date: user.birth_date || '',
        gender: user.gender || '',
        emergency_contact_name: user.emergency_contact_name || '',
        emergency_contact_phone: user.emergency_contact_phone || '',
        emergency_contact_relation: user.emergency_contact_relation || '',
        education: user.education || '',
        occupation: user.occupation || '',
        organization: user.organization || '',
        skills: user.skills || [],
        interests: user.interests || [],
        languages: user.languages || ['ru'],
        experience_description: user.experience_description || '',
        travel_willingness: user.travel_willingness || false,
        max_travel_distance: user.max_travel_distance || 50,
        preferred_activities: user.preferred_activities || []
      });
    }
  };

  const getCompletionPercentage = () => {
    const fields = [
      formData.email, formData.phone, formData.birth_date,
      formData.emergency_contact_name, formData.emergency_contact_phone,
      formData.education, formData.skills.length > 0, formData.experience_description
    ];
    const filledFields = fields.filter(field => field).length;
    return Math.round((filledFields / fields.length) * 100);
  };

  const handleDeleteProfile = async () => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!')) return;
    try {
      const response = await fetch('/api/auth/delete-profile', {
        method: 'DELETE',
        headers: {
          'X-Telegram-Init-Data': window.Telegram?.WebApp?.initData || ''
        }
      });
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è');
      setUser(null);
      clearAuthData();
      navigate('/');
    } catch (e) {
      alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ' + e.message);
    }
  };

  // --- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è organizer ---
  if (user?.role === 'organizer') {
    console.log('ORGANIZER USER:', user);
    return (
      <div className="profile-page">
        <div className="profile-header card mb-4">
          <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
            <div className="avatar" style={{ width: '80px', height: '80px', borderRadius: '50%', backgroundColor: 'var(--tg-button-color)', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '32px', color: 'white' }}>
              {user?.avatar_url ? (
                <img src={user.avatar_url} alt="Avatar" style={{ width: '100%', height: '100%', borderRadius: '50%' }} />
              ) : (
                <User size={40} />
              )}
            </div>
            <div>
              <h2 className="mb-1">{user?.first_name} {user?.last_name}</h2>
              <p className="text-muted mb-1">@{user?.telegram_username || 'organizer'}</p>
              <p className="text-muted font-small">üëî –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä</p>
            </div>
          </div>
        </div>
        <div className="card mb-4">
          <h3 className="mb-3">üè¢ –î–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</h3>
          <div className="form-group"><b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {user.organization_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
          <div className="form-group"><b>–ò–ù–ù:</b> {user.inn || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>–û–ì–†–ù:</b> {user.ogrn || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:</b> {user.org_contact_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
          <div className="form-group"><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {user.org_phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>Email:</b> {user.org_email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
          <div className="form-group"><b>–Æ—Ä. –∞–¥—Ä–µ—Å:</b> {user.org_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
        </div>
        <button className="btn btn-danger" onClick={handleDeleteProfile} style={{ marginTop: 16 }}>–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</button>
      </div>
    );
  }

  // --- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è admin ---
  if (user?.role === 'admin') {
    return (
      <div className="profile-page">
        <div className="profile-header card mb-4">
          <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
            <div className="avatar" style={{ width: '80px', height: '80px', borderRadius: '50%', backgroundColor: 'var(--tg-button-color)', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '32px', color: 'white' }}>
              {user?.avatar_url ? (
                <img src={user.avatar_url} alt="Avatar" style={{ width: '100%', height: '100%', borderRadius: '50%' }} />
              ) : (
                <User size={40} />
              )}
            </div>
            <div>
              <h2 className="mb-1">{user?.first_name} {user?.last_name}</h2>
              <p className="text-muted mb-1">@{user?.telegram_username || 'admin'}</p>
              <p className="text-muted font-small">üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</p>
            </div>
          </div>
        </div>
        <div className="card mb-4">
          <h3 className="mb-3">–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h3>
          <p>–£ –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏ –∏ —Å–æ–±—ã—Ç–∏—è–º–∏.</p>
          <button className="btn btn-primary" onClick={() => navigate('/admin')}>–ü–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</button>
        </div>
      </div>
    );
  }

  if (loading) {
    return <LoadingSpinner message="–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è..." />;
  }

  return (
    <div className="profile-page">
      {/* Header */}
      <div className="profile-header card mb-4">
        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
            <div className="avatar" style={{
              width: '80px',
              height: '80px',
              borderRadius: '50%',
              backgroundColor: 'var(--tg-button-color)',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              fontSize: '32px',
              color: 'white'
            }}>
              {user?.avatar_url ? (
                <img src={user.avatar_url} alt="Avatar" style={{ width: '100%', height: '100%', borderRadius: '50%' }} />
              ) : (
                <User size={40} />
              )}
            </div>

            <div>
              <h2 className="mb-1">{user?.first_name} {user?.last_name}</h2>
              <p className="text-muted mb-1">@{user?.telegram_username || 'volunteer'}</p>
              <p className="text-muted font-small">
                {user?.role === 'volunteer' && 'ü§ù –í–æ–ª–æ–Ω—Ç–µ—Ä'}
                {user?.role === 'organizer' && 'üëî –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä'}
                {user?.role === 'admin' && 'üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'}
              </p>
            </div>
          </div>

          <button
            onClick={() => editMode ? handleCancel() : setEditMode(true)}
            className={`btn ${editMode ? 'btn-outline' : 'btn-primary'}`}
            disabled={saving}
          >
            {editMode ? <X size={16} /> : <Edit size={16} />}
            <span className="ml-2">{editMode ? '–û—Ç–º–µ–Ω–∞' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'}</span>
          </button>
        </div>

        {/* Progress Bar */}
        <div className="profile-completion mt-4">
          <div className="completion-header">
            <span>–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è:</span>
            <span className="completion-percentage">{getCompletionPercentage()}%</span>
          </div>
          <div className="completion-bar">
            <div
              className="completion-fill"
              style={{ width: `${getCompletionPercentage()}%` }}
            />
          </div>
        </div>
      </div>

      {errors.general && (
        <div className="error-message mb-4">
          {errors.general}
        </div>
      )}

      {/* Main Info */}
      <div className="card mb-4">
        <h3 className="mb-3">üìß –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>

        <div className="form-row">
          <div className="form-group">
            <label>Email</label>
            {editMode ? (
              <input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                className="form-control"
                placeholder="your@example.com"
              />
            ) : (
              <p className="form-value">{formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
            )}
          </div>

          <div className="form-group">
            <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
            {editMode ? (
              <input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleChange}
                className="form-control"
                placeholder="+7 (XXX) XXX-XX-XX"
              />
            ) : (
              <p className="form-value">{formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
            )}
          </div>
        </div>

        <div className="form-group">
          <label>–û —Å–µ–±–µ</label>
          {editMode ? (
            <textarea
              name="bio"
              value={formData.bio}
              onChange={handleChange}
              className="form-control"
              placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ..."
              rows="3"
            />
          ) : (
            <p className="form-value">{formData.bio || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
          )}
        </div>

        <div className="form-group">
          <label>–ì–æ—Ä–æ–¥</label>
          {editMode ? (
            <input
              type="text"
              name="location"
              value={formData.location}
              onChange={handleChange}
              className="form-control"
              placeholder="–í–∞—à –≥–æ—Ä–æ–¥"
            />
          ) : (
            <p className="form-value">{formData.location || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
          )}
        </div>
      </div>

      {/* Personal Info */}
      <div className="card mb-4">
        <h3 className="mb-3">üë§ –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>

        <div className="form-group">
          <label>–û—Ç—á–µ—Å—Ç–≤–æ</label>
          {editMode ? (
            <input
              type="text"
              name="middle_name"
              value={formData.middle_name}
              onChange={handleChange}
              className="form-control"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ"
            />
          ) : (
            <p className="form-value">{formData.middle_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
          )}
        </div>

        <div className="form-row">
          <div className="form-group">
            <label>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
            {editMode ? (
              <input
                type="date"
                name="birth_date"
                value={formData.birth_date}
                onChange={handleChange}
                className="form-control"
              />
            ) : (
              <p className="form-value">
                {formData.birth_date
                  ? new Date(formData.birth_date).toLocaleDateString('ru-RU')
                  : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
                }
              </p>
            )}
          </div>

          <div className="form-group">
            <label>–ü–æ–ª</label>
            {editMode ? (
              <select
                name="gender"
                value={formData.gender}
                onChange={handleChange}
                className="form-control"
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                <option value="male">–ú—É–∂—Å–∫–æ–π</option>
                <option value="female">–ñ–µ–Ω—Å–∫–∏–π</option>
                <option value="other">–î—Ä—É–≥–æ–π</option>
              </select>
            ) : (
              <p className="form-value">
                {formData.gender === 'male' && '–ú—É–∂—Å–∫–æ–π'}
                {formData.gender === 'female' && '–ñ–µ–Ω—Å–∫–∏–π'}
                {formData.gender === 'other' && '–î—Ä—É–≥–æ–π'}
                {!formData.gender && '–ù–µ —É–∫–∞–∑–∞–Ω'}
              </p>
            )}
          </div>
        </div>
      </div>

      {/* Emergency Contacts */}
      <div className="card mb-4">
        <h3 className="mb-3">üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h3>

        <div className="form-group">
          <label>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ</label>
          {editMode ? (
            <input
              type="text"
              name="emergency_contact_name"
              value={formData.emergency_contact_name}
              onChange={handleChange}
              className="form-control"
              placeholder="–§–ò–û –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞"
            />
          ) : (
            <p className="form-value">{formData.emergency_contact_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
          )}
        </div>

        <div className="form-row">
          <div className="form-group">
            <label>–¢–µ–ª–µ—Ñ–æ–Ω –∫–æ–Ω—Ç–∞–∫—Ç–∞</label>
            {editMode ? (
              <input
                type="tel"
                name="emergency_contact_phone"
                value={formData.emergency_contact_phone}
                onChange={handleChange}
                className="form-control"
                placeholder="+7 (XXX) XXX-XX-XX"
              />
            ) : (
              <p className="form-value">{formData.emergency_contact_phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
            )}
          </div>

          <div className="form-group">
            <label>–°—Ç–µ–ø–µ–Ω—å —Ä–æ–¥—Å—Ç–≤–∞</label>
            {editMode ? (
              <select
                name="emergency_contact_relation"
                value={formData.emergency_contact_relation}
                onChange={handleChange}
                className="form-control"
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                <option value="parent">–†–æ–¥–∏—Ç–µ–ª—å</option>
                <option value="spouse">–°—É–ø—Ä—É–≥(–∞)</option>
                <option value="sibling">–ë—Ä–∞—Ç/–°–µ—Å—Ç—Ä–∞</option>
                <option value="child">–†–µ–±–µ–Ω–æ–∫</option>
                <option value="friend">–î—Ä—É–≥</option>
                <option value="relative">–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫</option>
                <option value="other">–î—Ä—É–≥–æ–µ</option>
              </select>
            ) : (
              <p className="form-value">
                {formData.emergency_contact_relation === 'parent' && '–†–æ–¥–∏—Ç–µ–ª—å'}
                {formData.emergency_contact_relation === 'spouse' && '–°—É–ø—Ä—É–≥(–∞)'}
                {formData.emergency_contact_relation === 'sibling' && '–ë—Ä–∞—Ç/–°–µ—Å—Ç—Ä–∞'}
                {formData.emergency_contact_relation === 'child' && '–†–µ–±–µ–Ω–æ–∫'}
                {formData.emergency_contact_relation === 'friend' && '–î—Ä—É–≥'}
                {formData.emergency_contact_relation === 'relative' && '–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫'}
                {formData.emergency_contact_relation === 'other' && '–î—Ä—É–≥–æ–µ'}
                {!formData.emergency_contact_relation && '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
              </p>
            )}
          </div>
        </div>
      </div>

      {/* Professional Info */}
      <div className="card mb-4">
        <h3 className="mb-3">üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>

        <div className="form-group">
          <label>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</label>
          {editMode ? (
            <input
              type="text"
              name="education"
              value={formData.education}
              onChange={handleChange}
              className="form-control"
              placeholder="–í–∞—à–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"
            />
          ) : (
            <p className="form-value">{formData.education || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
          )}
        </div>

        <div className="form-row">
          <div className="form-group">
            <label>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è</label>
            {editMode ? (
              <input
                type="text"
                name="occupation"
                value={formData.occupation}
                onChange={handleChange}
                className="form-control"
                placeholder="–ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å"
              />
            ) : (
              <p className="form-value">{formData.occupation || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
            )}
          </div>

          <div className="form-group">
            <label>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è</label>
            {editMode ? (
              <input
                type="text"
                name="organization"
                value={formData.organization}
                onChange={handleChange}
                className="form-control"
                placeholder="–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã/—É—á–µ–±—ã"
              />
            ) : (
              <p className="form-value">{formData.organization || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
            )}
          </div>
        </div>
      </div>

      {/* Skills & Experience */}
      <div className="card mb-4">
        <h3 className="mb-3">üí™ –ù–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç</h3>

        <div className="form-group">
          <label>–ù–∞–≤—ã–∫–∏</label>
          {editMode ? (
            <div className="skills-grid">
              {skillsOptions.map(skill => (
                <label key={skill} className="skill-checkbox">
                  <input
                    type="checkbox"
                    checked={formData.skills.includes(skill)}
                    onChange={() => handleMultiSelect('skills', skill)}
                  />
                  <span>{skill}</span>
                </label>
              ))}
            </div>
          ) : (
            <div className="skills-display">
              {formData.skills.length > 0 ? (
                formData.skills.map(skill => (
                  <span key={skill} className="skill-tag">{skill}</span>
                ))
              ) : (
                <p className="form-value">–ù–µ —É–∫–∞–∑–∞–Ω—ã</p>
              )}
            </div>
          )}
        </div>

        <div className="form-group">
          <label>–û–ø—ã—Ç –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–∞</label>
          {editMode ? (
            <textarea
              name="experience_description"
              value={formData.experience_description}
              onChange={handleChange}
              className="form-control"
              placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã..."
              rows="4"
            />
          ) : (
            <p className="form-value">{formData.experience_description || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
          )}
        </div>
      </div>

      {/* Save Button */}
      {editMode && (
        <div className="form-buttons mb-4">
          <button
            onClick={handleSave}
            className="btn btn-primary"
            disabled={saving}
          >
            <Save size={16} />
            <span className="ml-2">{saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è'}</span>
          </button>
        </div>
      )}

      <button className="btn btn-danger" onClick={handleDeleteProfile} style={{marginTop: 24}}>
        –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
      </button>
    </div>
  );
};

export default ProfilePage;