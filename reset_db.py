# reset_db.py
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, str(Path('.').absolute()))

from backend.database import engine, Base, SessionLocal
from backend.models.user import User, UserRole
from backend.models.volunteer_profile import VolunteerProfile
from backend.models.event import Event, EventStatus, EventCategory
from backend.models.registration import Registration, RegistrationStatus
from datetime import datetime


def reset_database():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –Ω—É–ª—è"""
    print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_file = Path("volunteer.db")
    if db_file.exists():
        db_file.unlink()
        print("  ‚úÖ –°—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")

    print("üî® –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    Base.metadata.create_all(bind=engine)
    print("  ‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    create_test_data()

    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")


def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

    db = SessionLocal()

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        admin_user = User(
            telegram_user_id=123456789,
            telegram_username="admin_test",
            first_name="–ê–¥–º–∏–Ω",
            last_name="–¢–µ—Å—Ç–æ–≤—ã–π",
            email="admin@test.com",
            phone="+7 (999) 111-11-11",
            role=UserRole.ADMIN
        )

        organizer_user = User(
            telegram_user_id=987654321,
            telegram_username="organizer_test",
            first_name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä",
            last_name="–¢–µ—Å—Ç–æ–≤—ã–π",
            email="organizer@test.com",
            phone="+7 (999) 222-22-22",
            role=UserRole.ORGANIZER
        )

        volunteer_user = User(
            telegram_user_id=111222333,
            telegram_username="volunteer_test",
            first_name="–í–æ–ª–æ–Ω—Ç–µ—Ä",
            last_name="–¢–µ—Å—Ç–æ–≤—ã–π",
            email="volunteer@test.com",
            phone="+7 (999) 333-33-33",
            role=UserRole.VOLUNTEER
        )

        # –ì–æ—Å—Ç–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Telegram
        guest_user = User(
            telegram_user_id=999999999,
            telegram_username="guest_user",
            first_name="–ì–æ—Å—Ç—å",
            last_name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            email=None,
            phone=None,
            role=UserRole.VOLUNTEER
        )

        db.add_all([admin_user, organizer_user, volunteer_user, guest_user])
        db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

        print(f"  üë§ –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 4")
        print(f"    - –ê–¥–º–∏–Ω: {admin_user.id}")
        print(f"    - –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {organizer_user.id}")
        print(f"    - –í–æ–ª–æ–Ω—Ç–µ—Ä: {volunteer_user.id}")
        print(f"    - –ì–æ—Å—Ç—å: {guest_user.id}")

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞
        volunteer_profile = VolunteerProfile(
            user_id=volunteer_user.id,
            middle_name="–¢–µ—Å—Ç–æ–≤–∏—á",
            birth_date=datetime(1990, 1, 1),
            gender="male",
            emergency_contact_name="–†–æ–¥–∏—Ç–µ–ª—å –¢–µ—Å—Ç–æ–≤—ã–π",
            emergency_contact_phone="+7 (999) 444-44-44",
            emergency_contact_relation="parent",
            education="–í—ã—Å—à–µ–µ",
            skills=["–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏", "–†–∞–±–æ—Ç–∞ —Å –¥–µ—Ç—å–º–∏"],
            interests=["–≠–∫–æ–ª–æ–≥–∏—è", "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å"],
            experience_description="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º 2 –≥–æ–¥–∞",
            languages=["ru", "en"],
            travel_willingness=True,
            max_travel_distance=100,
            preferred_activities=["–†–∞–∑–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ"],
            profile_completed=True
        )

        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –≥–æ—Å—Ç—è
        guest_profile = VolunteerProfile(
            user_id=guest_user.id,
            skills=[],
            interests=[],
            languages=["ru"],
            preferred_activities=[],
            profile_completed=False
        )

        db.add_all([volunteer_profile, guest_profile])

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        events_data = [
            {
                "creator_id": organizer_user.id,
                "title": "–£–±–æ—Ä–∫–∞ –ø–∞—Ä–∫–∞",
                "description": "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–∫—Ü–∏—è –ø–æ —É–±–æ—Ä–∫–µ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –ø–∞—Ä–∫–∞. –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤—Å–µ—Ö –Ω–µ—Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —É–ª—É—á—à–µ–Ω–∏–∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞.",
                "short_description": "–ü–æ–º–æ–≥–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à –≥–æ—Ä–æ–¥ —á–∏—â–µ!",
                "category": EventCategory.ENVIRONMENTAL,
                "tags": ["—ç–∫–æ–ª–æ–≥–∏—è", "—É–±–æ—Ä–∫–∞", "–ø–∞—Ä–∫", "–ø—Ä–∏—Ä–æ–¥–∞"],
                "location": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∫",
                "address": "—É–ª. –ü–∞—Ä–∫–æ–≤–∞—è, 1",
                "start_date": datetime(2024, 12, 15, 10, 0),
                "end_date": datetime(2024, 12, 15, 16, 0),
                "max_volunteers": 20,
                "required_skills": ["–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å"],
                "what_to_bring": "–ü–µ—Ä—á–∞—Ç–∫–∏, —É–¥–æ–±–Ω–∞—è –æ–¥–µ–∂–¥–∞, –ø–∏—Ç—å–µ–≤–∞—è –≤–æ–¥–∞",
                "meal_provided": True,
                "contact_person": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                "contact_phone": "+7 (999) 222-22-22",
                "status": EventStatus.PUBLISHED,
                "published_at": datetime.utcnow()
            },
            {
                "creator_id": organizer_user.id,
                "title": "–ü–æ–º–æ—â—å –≤ –¥–µ—Ç—Å–∫–æ–º –¥–æ–º–µ",
                "description": "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤ –∏ –∏–≥—Ä –¥–ª—è –¥–µ—Ç–µ–π –≤ –¥–µ—Ç—Å–∫–æ–º –¥–æ–º–µ. –ü–æ–¥–∞—Ä–∏—Ç–µ –¥–µ—Ç—è–º —Ä–∞–¥–æ—Å—Ç—å —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –æ–±—â–µ–Ω–∏—è!",
                "short_description": "–ü–æ–¥–∞—Ä–∏—Ç–µ –¥–µ—Ç—è–º —Ä–∞–¥–æ—Å—Ç—å —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞!",
                "category": EventCategory.SOCIAL,
                "tags": ["–¥–µ—Ç–∏", "—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ", "–ø–æ–º–æ—â—å"],
                "location": "–î–µ—Ç—Å–∫–∏–π –¥–æ–º ‚Ññ5",
                "address": "—É–ª. –î–µ—Ç—Å–∫–∞—è, 10",
                "start_date": datetime(2024, 12, 20, 14, 0),
                "end_date": datetime(2024, 12, 20, 18, 0),
                "max_volunteers": 10,
                "required_skills": ["–†–∞–±–æ—Ç–∞ —Å –¥–µ—Ç—å–º–∏", "–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏"],
                "what_to_bring": "–•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
                "meal_provided": False,
                "contact_person": "–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞",
                "contact_phone": "+7 (999) 333-33-33",
                "status": EventStatus.PUBLISHED,
                "published_at": datetime.utcnow()
            },
            {
                "creator_id": organizer_user.id,
                "title": "–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–±–µ–≥",
                "description": "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è —Å–±–æ—Ä–∞ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –ª–µ—á–µ–Ω–∏–µ –¥–µ—Ç–µ–π. –£—á–∞—Å—Ç–≤—É—é—Ç –∫–∞–∫ –±–µ–≥—É–Ω—ã, —Ç–∞–∫ –∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä—ã –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.",
                "short_description": "–ë–µ–≥–∏—Ç–µ —Ä–∞–¥–∏ –¥–æ–±—Ä–æ–≥–æ –¥–µ–ª–∞!",
                "category": EventCategory.SPORTS,
                "tags": ["—Å–ø–æ—Ä—Ç", "–∑–∞–±–µ–≥", "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"],
                "location": "–°—Ç–∞–¥–∏–æ–Ω \"–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π\"",
                "address": "—É–ª. –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è, 5",
                "start_date": datetime(2024, 12, 25, 9, 0),
                "end_date": datetime(2024, 12, 25, 15, 0),
                "max_volunteers": 15,
                "required_skills": [],
                "preferred_skills": ["–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞", "–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"],
                "what_to_bring": "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞",
                "meal_provided": True,
                "contact_person": "–ü–µ—Ç—Ä –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π",
                "contact_phone": "+7 (999) 555-55-55",
                "status": EventStatus.PUBLISHED,
                "published_at": datetime.utcnow()
            }
        ]

        for event_data in events_data:
            event = Event(**event_data)
            db.add(event)

        db.commit()

        print(f"  ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:")
        print(f"    üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: 4")
        print(f"    üìÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {len(events_data)}")
        print(f"    üë®‚Äçüíº –ü—Ä–æ—Ñ–∏–ª–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤: 2")

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()
        db.rollback()
        raise
    finally:
        db.close()


if __name__ == "__main__":
    print("üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    reset_database()
    print("üéâ –ì–æ—Ç–æ–≤–æ! –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")